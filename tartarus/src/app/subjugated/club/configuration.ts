// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

export class Configuration {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):Configuration {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsConfiguration(bb:flatbuffers.ByteBuffer, obj?:Configuration):Configuration {
  return (obj || new Configuration()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsConfiguration(bb:flatbuffers.ByteBuffer, obj?:Configuration):Configuration {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new Configuration()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

coordinatorAddress():string|null
coordinatorAddress(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
coordinatorAddress(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

static startConfiguration(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static addCoordinatorAddress(builder:flatbuffers.Builder, coordinatorAddressOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, coordinatorAddressOffset, 0);
}

static endConfiguration(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createConfiguration(builder:flatbuffers.Builder, coordinatorAddressOffset:flatbuffers.Offset):flatbuffers.Offset {
  Configuration.startConfiguration(builder);
  Configuration.addCoordinatorAddress(builder, coordinatorAddressOffset);
  return Configuration.endConfiguration(builder);
}
}
