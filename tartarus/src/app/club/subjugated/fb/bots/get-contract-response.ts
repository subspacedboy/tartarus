// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

export class GetContractResponse {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):GetContractResponse {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsGetContractResponse(bb:flatbuffers.ByteBuffer, obj?:GetContractResponse):GetContractResponse {
  return (obj || new GetContractResponse()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsGetContractResponse(bb:flatbuffers.ByteBuffer, obj?:GetContractResponse):GetContractResponse {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new GetContractResponse()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

nextCounter():number {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.readUint16(this.bb_pos + offset) : 0;
}

static startGetContractResponse(builder:flatbuffers.Builder) {
  builder.startObject(1);
}

static addNextCounter(builder:flatbuffers.Builder, nextCounter:number) {
  builder.addFieldInt16(0, nextCounter, 0);
}

static endGetContractResponse(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createGetContractResponse(builder:flatbuffers.Builder, nextCounter:number):flatbuffers.Offset {
  GetContractResponse.startGetContractResponse(builder);
  GetContractResponse.addNextCounter(builder, nextCounter);
  return GetContractResponse.endGetContractResponse(builder);
}
}
