// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

import { Permission } from '../../../../club/subjugated/fb/message/permission.js';


export class Bot {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):Bot {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsBot(bb:flatbuffers.ByteBuffer, obj?:Bot):Bot {
  return (obj || new Bot()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsBot(bb:flatbuffers.ByteBuffer, obj?:Bot):Bot {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new Bot()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

name():string|null
name(optionalEncoding:flatbuffers.Encoding):string|Uint8Array|null
name(optionalEncoding?:any):string|Uint8Array|null {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;
}

permissions(obj?:Permission):Permission|null {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? (obj || new Permission()).__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) : null;
}

static startBot(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addName(builder:flatbuffers.Builder, nameOffset:flatbuffers.Offset) {
  builder.addFieldOffset(0, nameOffset, 0);
}

static addPermissions(builder:flatbuffers.Builder, permissionsOffset:flatbuffers.Offset) {
  builder.addFieldOffset(1, permissionsOffset, 0);
}

static endBot(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

}
