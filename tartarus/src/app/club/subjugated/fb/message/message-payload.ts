// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import { Contract } from '../../../../club/subjugated/fb/message/contract.js';
import { LockUpdateEvent } from '../../../../club/subjugated/fb/message/lock-update-event.js';


export enum MessagePayload {
  NONE = 0,
  Contract = 1,
  LockUpdateEvent = 2
}

export function unionToMessagePayload(
  type: MessagePayload,
  accessor: (obj:Contract|LockUpdateEvent) => Contract|LockUpdateEvent|null
): Contract|LockUpdateEvent|null {
  switch(MessagePayload[type]) {
    case 'NONE': return null; 
    case 'Contract': return accessor(new Contract())! as Contract;
    case 'LockUpdateEvent': return accessor(new LockUpdateEvent())! as LockUpdateEvent;
    default: return null;
  }
}

export function unionListToMessagePayload(
  type: MessagePayload, 
  accessor: (index: number, obj:Contract|LockUpdateEvent) => Contract|LockUpdateEvent|null, 
  index: number
): Contract|LockUpdateEvent|null {
  switch(MessagePayload[type]) {
    case 'NONE': return null; 
    case 'Contract': return accessor(index, new Contract())! as Contract;
    case 'LockUpdateEvent': return accessor(index, new LockUpdateEvent())! as LockUpdateEvent;
    default: return null;
  }
}
