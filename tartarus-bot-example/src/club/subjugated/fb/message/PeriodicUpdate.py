# automatically generated by the FlatBuffers compiler, do not modify

# namespace: message

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class PeriodicUpdate(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = PeriodicUpdate()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsPeriodicUpdate(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # PeriodicUpdate
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # PeriodicUpdate
    def Session(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

    # PeriodicUpdate
    def IsLocked(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # PeriodicUpdate
    def CurrentContractSerial(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint16Flags, o + self._tab.Pos)
        return 0

    # PeriodicUpdate
    def LocalUnlock(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

    # PeriodicUpdate
    def LocalLock(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(12))
        if o != 0:
            return bool(self._tab.Get(flatbuffers.number_types.BoolFlags, o + self._tab.Pos))
        return False

def PeriodicUpdateStart(builder):
    builder.StartObject(5)

def Start(builder):
    PeriodicUpdateStart(builder)

def PeriodicUpdateAddSession(builder, session):
    builder.PrependUOffsetTRelativeSlot(0, flatbuffers.number_types.UOffsetTFlags.py_type(session), 0)

def AddSession(builder, session):
    PeriodicUpdateAddSession(builder, session)

def PeriodicUpdateAddIsLocked(builder, isLocked):
    builder.PrependBoolSlot(1, isLocked, 0)

def AddIsLocked(builder, isLocked):
    PeriodicUpdateAddIsLocked(builder, isLocked)

def PeriodicUpdateAddCurrentContractSerial(builder, currentContractSerial):
    builder.PrependUint16Slot(2, currentContractSerial, 0)

def AddCurrentContractSerial(builder, currentContractSerial):
    PeriodicUpdateAddCurrentContractSerial(builder, currentContractSerial)

def PeriodicUpdateAddLocalUnlock(builder, localUnlock):
    builder.PrependBoolSlot(3, localUnlock, 0)

def AddLocalUnlock(builder, localUnlock):
    PeriodicUpdateAddLocalUnlock(builder, localUnlock)

def PeriodicUpdateAddLocalLock(builder, localLock):
    builder.PrependBoolSlot(4, localLock, 0)

def AddLocalLock(builder, localLock):
    PeriodicUpdateAddLocalLock(builder, localLock)

def PeriodicUpdateEnd(builder):
    return builder.EndObject()

def End(builder):
    return PeriodicUpdateEnd(builder)
