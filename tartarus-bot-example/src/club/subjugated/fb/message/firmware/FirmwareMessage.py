# automatically generated by the FlatBuffers compiler, do not modify

# namespace: firmware

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class FirmwareMessage(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = FirmwareMessage()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsFirmwareMessage(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # FirmwareMessage
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # FirmwareMessage
    def PayloadType(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint8Flags, o + self._tab.Pos)
        return 0

    # FirmwareMessage
    def Payload(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            from flatbuffers.table import Table
            obj = Table(bytearray(), 0)
            self._tab.Union(obj, o)
            return obj
        return None

    # FirmwareMessage
    def RequestId(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Int64Flags, o + self._tab.Pos)
        return 0

    # FirmwareMessage
    def SessionToken(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(10))
        if o != 0:
            return self._tab.String(o + self._tab.Pos)
        return None

def FirmwareMessageStart(builder):
    builder.StartObject(4)

def Start(builder):
    FirmwareMessageStart(builder)

def FirmwareMessageAddPayloadType(builder, payloadType):
    builder.PrependUint8Slot(0, payloadType, 0)

def AddPayloadType(builder, payloadType):
    FirmwareMessageAddPayloadType(builder, payloadType)

def FirmwareMessageAddPayload(builder, payload):
    builder.PrependUOffsetTRelativeSlot(1, flatbuffers.number_types.UOffsetTFlags.py_type(payload), 0)

def AddPayload(builder, payload):
    FirmwareMessageAddPayload(builder, payload)

def FirmwareMessageAddRequestId(builder, requestId):
    builder.PrependInt64Slot(2, requestId, 0)

def AddRequestId(builder, requestId):
    FirmwareMessageAddRequestId(builder, requestId)

def FirmwareMessageAddSessionToken(builder, sessionToken):
    builder.PrependUOffsetTRelativeSlot(3, flatbuffers.number_types.UOffsetTFlags.py_type(sessionToken), 0)

def AddSessionToken(builder, sessionToken):
    FirmwareMessageAddSessionToken(builder, sessionToken)

def FirmwareMessageEnd(builder):
    return builder.EndObject()

def End(builder):
    return FirmwareMessageEnd(builder)
