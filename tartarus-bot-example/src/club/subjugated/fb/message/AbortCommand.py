# automatically generated by the FlatBuffers compiler, do not modify

# namespace: message

import flatbuffers
from flatbuffers.compat import import_numpy
np = import_numpy()

class AbortCommand(object):
    __slots__ = ['_tab']

    @classmethod
    def GetRootAs(cls, buf, offset=0):
        n = flatbuffers.encode.Get(flatbuffers.packer.uoffset, buf, offset)
        x = AbortCommand()
        x.Init(buf, n + offset)
        return x

    @classmethod
    def GetRootAsAbortCommand(cls, buf, offset=0):
        """This method is deprecated. Please switch to GetRootAs."""
        return cls.GetRootAs(buf, offset)
    # AbortCommand
    def Init(self, buf, pos):
        self._tab = flatbuffers.table.Table(buf, pos)

    # AbortCommand
    def ContractSerialNumber(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(4))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint16Flags, o + self._tab.Pos)
        return 0

    # AbortCommand
    def SerialNumber(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(6))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint16Flags, o + self._tab.Pos)
        return 0

    # AbortCommand
    def Counter(self):
        o = flatbuffers.number_types.UOffsetTFlags.py_type(self._tab.Offset(8))
        if o != 0:
            return self._tab.Get(flatbuffers.number_types.Uint16Flags, o + self._tab.Pos)
        return 0

def AbortCommandStart(builder):
    builder.StartObject(3)

def Start(builder):
    AbortCommandStart(builder)

def AbortCommandAddContractSerialNumber(builder, contractSerialNumber):
    builder.PrependUint16Slot(0, contractSerialNumber, 0)

def AddContractSerialNumber(builder, contractSerialNumber):
    AbortCommandAddContractSerialNumber(builder, contractSerialNumber)

def AbortCommandAddSerialNumber(builder, serialNumber):
    builder.PrependUint16Slot(1, serialNumber, 0)

def AddSerialNumber(builder, serialNumber):
    AbortCommandAddSerialNumber(builder, serialNumber)

def AbortCommandAddCounter(builder, counter):
    builder.PrependUint16Slot(2, counter, 0)

def AddCounter(builder, counter):
    AbortCommandAddCounter(builder, counter)

def AbortCommandEnd(builder):
    return builder.EndObject()

def End(builder):
    return AbortCommandEnd(builder)
