// automatically generated by the FlatBuffers compiler, do not modify

package club.subjugated.fb.message

import com.google.flatbuffers.Constants
import com.google.flatbuffers.FlatBufferBuilder
import com.google.flatbuffers.Table
import java.nio.ByteBuffer
import java.nio.ByteOrder

@Suppress("unused")
class WebHook : Table() {

    fun __init(_i: Int, _bb: ByteBuffer) {
        __reset(_i, _bb)
    }

    fun __assign(_i: Int, _bb: ByteBuffer): WebHook {
        __init(_i, _bb)
        return this
    }

    val address: String?
        get() {
            val o = __offset(4)
            return if (o != 0) {
                __string(o + bb_pos)
            } else {
                null
            }
        }

    val addressAsByteBuffer: ByteBuffer
        get() = __vector_as_bytebuffer(4, 1)

    fun addressInByteBuffer(_bb: ByteBuffer): ByteBuffer = __vector_in_bytebuffer(_bb, 4, 1)

    companion object {
        fun validateVersion() = Constants.FLATBUFFERS_24_3_25()

        fun getRootAsWebHook(_bb: ByteBuffer): WebHook = getRootAsWebHook(_bb, WebHook())

        fun getRootAsWebHook(_bb: ByteBuffer, obj: WebHook): WebHook {
            _bb.order(ByteOrder.LITTLE_ENDIAN)
            return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb))
        }

        fun createWebHook(builder: FlatBufferBuilder, addressOffset: Int): Int {
            builder.startTable(1)
            addAddress(builder, addressOffset)
            return endWebHook(builder)
        }

        fun startWebHook(builder: FlatBufferBuilder) = builder.startTable(1)

        fun addAddress(builder: FlatBufferBuilder, address: Int) = builder.addOffset(0, address, 0)

        fun endWebHook(builder: FlatBufferBuilder): Int {
            val o = builder.endTable()
            return o
        }
    }
}
