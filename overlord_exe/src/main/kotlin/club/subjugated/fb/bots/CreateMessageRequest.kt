// automatically generated by the FlatBuffers compiler, do not modify

package club.subjugated.fb.bots

import com.google.flatbuffers.BaseVector
import com.google.flatbuffers.BooleanVector
import com.google.flatbuffers.ByteVector
import com.google.flatbuffers.Constants
import com.google.flatbuffers.DoubleVector
import com.google.flatbuffers.FlatBufferBuilder
import com.google.flatbuffers.FloatVector
import com.google.flatbuffers.LongVector
import com.google.flatbuffers.StringVector
import com.google.flatbuffers.Struct
import com.google.flatbuffers.Table
import com.google.flatbuffers.UnionVector
import java.nio.ByteBuffer
import java.nio.ByteOrder
import kotlin.math.sign

@Suppress("unused")
class CreateMessageRequest : Table() {

    fun __init(_i: Int, _bb: ByteBuffer)  {
        __reset(_i, _bb)
    }
    fun __assign(_i: Int, _bb: ByteBuffer) : CreateMessageRequest {
        __init(_i, _bb)
        return this
    }
    val contractName : String?
        get() {
            val o = __offset(4)
            return if (o != 0) {
                __string(o + bb_pos)
            } else {
                null
            }
        }
    val contractNameAsByteBuffer : ByteBuffer get() = __vector_as_bytebuffer(4, 1)
    fun contractNameInByteBuffer(_bb: ByteBuffer) : ByteBuffer = __vector_in_bytebuffer(_bb, 4, 1)
    val message : String?
        get() {
            val o = __offset(6)
            return if (o != 0) {
                __string(o + bb_pos)
            } else {
                null
            }
        }
    val messageAsByteBuffer : ByteBuffer get() = __vector_as_bytebuffer(6, 1)
    fun messageInByteBuffer(_bb: ByteBuffer) : ByteBuffer = __vector_in_bytebuffer(_bb, 6, 1)
    companion object {
        fun validateVersion() = Constants.FLATBUFFERS_24_3_25()
        fun getRootAsCreateMessageRequest(_bb: ByteBuffer): CreateMessageRequest = getRootAsCreateMessageRequest(_bb, CreateMessageRequest())
        fun getRootAsCreateMessageRequest(_bb: ByteBuffer, obj: CreateMessageRequest): CreateMessageRequest {
            _bb.order(ByteOrder.LITTLE_ENDIAN)
            return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb))
        }
        fun createCreateMessageRequest(builder: FlatBufferBuilder, contractNameOffset: Int, messageOffset: Int) : Int {
            builder.startTable(2)
            addMessage(builder, messageOffset)
            addContractName(builder, contractNameOffset)
            return endCreateMessageRequest(builder)
        }
        fun startCreateMessageRequest(builder: FlatBufferBuilder) = builder.startTable(2)
        fun addContractName(builder: FlatBufferBuilder, contractName: Int) = builder.addOffset(0, contractName, 0)
        fun addMessage(builder: FlatBufferBuilder, message: Int) = builder.addOffset(1, message, 0)
        fun endCreateMessageRequest(builder: FlatBufferBuilder) : Int {
            val o = builder.endTable()
            return o
        }
    }
}
